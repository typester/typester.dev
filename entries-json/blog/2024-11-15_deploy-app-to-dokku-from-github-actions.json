{"title":"Deploy applications to dokku from Git Actions","date":"2024-11-15T11:16:00-08:00","tags":["web","github","dokku","docker"],"eid":"d9a4d333-42cb-41af-b71a-309b0588feb9","image":null,"content":"<p>This website is deployed using <a href=\"https://dokku.com/\">Dokku</a>.<a class=\"footref\" href=\"#fn1\" id=\"r1\">[1]</a></p>\n<p>While it's possible to deploy to a Dokku host by pushing code directly from Git, the server running Dokku in my case doesn't have enough capacity to handle application builds. I wanted to avoid building the application directly on the Dokku host.</p>\n<p>To solve this, I decided to use GitHub Actions to build Docker images and deploy those images to Dokku. After some trial and error, Iâ€™ve documented the process here for reference.</p>\n<p>Below is the workflow file for the GitHub Action I currently use:</p>\n<blockquote>\n<p><a href=\"https://github.com/typester/typester.dev/blob/main/.github/workflows/deploy.yml\">deploy.yml</a></p>\n</blockquote>\n\n<p>The process flow is as follows:</p>\n<ol>\n<li>Check for code changes\n<ul>\n<li>If the app code is updated:\n<ul>\n<li>-&gt; Set <code>steps.changes.outputs.code == true</code></li>\n</ul></li>\n<li>If entry files are updated:\n<ul>\n<li>-&gt; Set <code>steps.changes.outputs.entries == true</code></li>\n</ul></li>\n</ul></li>\n<li>If entry files are updated:\n<ul>\n<li>Sync entry files using rsync</li>\n</ul></li>\n<li>If the app needs an update:\n<ul>\n<li>Build a Docker image</li>\n<li>Upload the built image to the GitHub Container Registry</li>\n<li>Deploy the image to Dokku</li>\n</ul></li>\n<li>If only the entry files were updated:\n<ul>\n<li>Restart the service in Dokku to reload the entries</li>\n</ul></li>\n</ol>\n\n<h3>Filtering types of repository changes</h3>\n<p>The trickiest part of creating this workflow was detecting the type of code changes. This was necessary because not all commits require redeploying the application.</p>\n<p>In my case, both application code and blog entry files are stored in the same repository. I wanted to support scenarios where only entries are updated without redeploying the application.</p>\n<p>Initially, I attempted to handle this manually, but it almost drove me crazy. Thankfully, the <a href=\"https://github.com/dorny/paths-filter\">dorny/paths-filter</a> action saved the day. This is truly a fantastic action.</p>\n<p>Handling this manually would have required detecting changes across various scenarios, such as single commits (I allow direct commits to the main branch for entry updates) and pull request merges and etc. I deeply appreciate the effort of those who made this action available.</p>\n\n<h3>Executing Dokku commands from GitHub Actions</h3>\n<p>Most Dokku commands can be executed over SSH, so enabling SSH access to the Dokku host from GitHub Actions is sufficient.</p>\n<p>First, generate an SSH key pair:</p>\n<pre><code class=\"shell\">$ ssh-keygen -t ed25519 -f dokku</code></pre>\n\n<p>This generates a private key (<code>dokku</code>) and a public key (<code>dokku.pub</code>).</p>\n<p>Register the public key on the Dokku host:</p>\n<pre><code class=\"shell\">$ echo <span class=\"string\">\"your pubkey here\"</span> | dokku ssh-keys:add github\n$ echo <span class=\"string\">\"your pubkey here\"</span> &gt;&gt; ~/.ssh/authorized_keys</code></pre>\n\n<p>The first line is required for using Dokku commands, while the second is for rsync operations. If you only need to run Dokku commands, the first line alone is sufficient.</p>\n<p>Next, register the private key on GitHub:</p>\n<section class=\"image\">\n  <div>\n    <a data-flickr-embed=\"true\" href=\"https://www.flickr.com/photos/typester/54142543399/in/datetaken-public/\" title=\"screenshot_20241115-120846\"><img src=\"https://live.staticflickr.com/65535/54142543399_51d9017904_h.jpg\" width=\"1600\" height=\"305\" alt=\"screenshot_20241115-120846\"/></a><script async src=\"//embedr.flickr.com/assets/client-code.js\" charset=\"utf-8\"></script>\n    <p>Setting -> Secrets and Variables -> Actions -> Repository Secrets</p>\n  </div>\n</section>\n\n<p>I registered it as <code>DOKKU_SSH_KEY</code>.</p>\n<p>Finally, add a step to place the key in the appropriate location so subsequent steps can access the Dokku host via SSH:</p>\n<pre><code class=\"yaml\">- <span class=\"variable-name\">name</span>: Set up SSH key\n  <span class=\"variable-name\">run</span>: |\n    <span class=\"string\">mkdir -p ~/.ssh</span>\n    echo <span class=\"string\">\"${{ secrets.DOKKU_SSH_KEY }}\"</span> &gt; ~/.ssh/id_ed25519\n<span class=\"string\">    chmod 600 ~/.ssh/id_ed25519</span>\n<span class=\"string\">    ssh-keyscan -H typester.dev &gt;&gt; ~/.ssh/known_hosts</span></code></pre>\n\n<h3>Building and uploading Docker images to GitHub Container Registry</h3>\n<p>This step was straightforward and mostly followed <a href=\"https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-github-packages\">official documentation</a>.</p>\n\n<h3>Deploying Docker images to Dokku</h3>\n<p>The deployment step looks like this:</p>\n<pre><code class=\"yaml\">- <span class=\"variable-name\">name</span>: Deploy image to production\n  <span class=\"variable-name\">if</span>: steps.changes.outputs.code == <span class=\"string\">'true'</span>\n  <span class=\"variable-name\">run</span>: |\n    ssh dokku@typester.dev git:from-image typester.dev ghcr.io/typester/typester.dev@${{ steps.push.outputs.digest }}</code></pre>\n\n<p>Initially, I set the image target as something like <code>typester.dev:main</code>, but if the image existed locally, it wouldn't pull the updated one. To fix this, I started specifying the digest value from the previous build step.</p>\n\n<h3>Restarting the service</h3>\n<p>When only entries are updated, restarting the service reloads the entries. The following step handles this:</p>\n<pre><code class=\"yaml\">- <span class=\"variable-name\">name</span>: Restart production server to reflect entries update\n  <span class=\"variable-name\">if</span>: steps.changes.outputs.code <span class=\"type\">!=</span> <span class=\"string\">'true'</span> &amp;&amp; steps.changes.outputs.entries == <span class=\"string\">'true'</span>\n  <span class=\"variable-name\">run</span>: |\n    ssh dokku@typester.dev ps:restart typester.dev</code></pre>\n\n<p>Both the image deployment and service restart steps ensure zero downtime by switching traffic to the new service only after it is up and running by Dokku. This is excellent!</p>\n\n<h3>Conclusion</h3>\n<p>Dokku is amazing.</p>\n<aside class=\"footdef\">\n<p id=\"fn1\"><a href=\"#r1\">[1]</a> The source code for the entire site is available here: <a href=\"https://github.com/typester/typester.dev\">https://github.com/typester/typester.dev</a></p>\n</aside>\n"}
